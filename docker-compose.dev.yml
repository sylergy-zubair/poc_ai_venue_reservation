version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: venue-booking-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: venue_booking_dev
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_dev:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - venue-booking-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7.2-alpine
    container_name: venue-booking-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - venue-booking-network
    command: redis-server --requirepass redispassword
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Ollama for local LLM (replaces Claude AI)
  ollama:
    image: ollama/ollama:latest
    container_name: venue-booking-ollama-dev
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data_dev:/root/.ollama
    networks:
      - venue-booking-network
    environment:
      - OLLAMA_HOST=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
        limits:
          memory: 8G

  # Backend API service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: dev
    container_name: venue-booking-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongodb:27017/venue_booking_dev?authSource=admin
      REDIS_URL: redis://default:redispassword@redis:6379
      OLLAMA_API_URL: http://ollama:11434
      VENUE_API_KEY: ${VENUE_API_KEY}
      MEETINGPACKAGE_API_URL: ${MEETINGPACKAGE_API_URL:-https://api.meetingpackage.com/v1}
      MEETINGPACKAGE_API_KEY: ${MEETINGPACKAGE_API_KEY}
      MEETINGPACKAGE_TIMEOUT: ${MEETINGPACKAGE_TIMEOUT:-10000}
      MEETINGPACKAGE_RETRY_ATTEMPTS: ${MEETINGPACKAGE_RETRY_ATTEMPTS:-3}
      MEETINGPACKAGE_RATE_LIMIT_DELAY: ${MEETINGPACKAGE_RATE_LIMIT_DELAY:-100}
      JWT_SECRET: ${JWT_SECRET:-your-dev-jwt-secret-key-here}
      LOG_LEVEL: debug
      RATE_LIMIT_MAX: 1000
      CACHE_TTL: 300
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_logs_dev:/app/logs
    networks:
      - venue-booking-network
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Next.js service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: venue-booking-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      BACKEND_URL: http://backend:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - venue-booking-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mongodb_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  backend_logs_dev:
    driver: local
  ollama_data_dev:
    driver: local

networks:
  venue-booking-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16